//
//  StyleKit.m
//  Tiime
//
//  Created by Brandon Beecroft on 10/23/14.
//  Copyright (c) 2014 Awesometistic, LLC. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "StyleKit.h"


@implementation StyleKit

#pragma mark Cache

static UIImage* _imageOfTimeIcon = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawTimeIcon
{
    //// Color Declarations
    UIColor* emeraldGreen = [UIColor colorWithRed: 0.32 green: 0.8 blue: 0.418 alpha: 1];

    //// Icons
    {
        //// circlecons_vol1
        {
            //// vol1
            {
                //// icon-clock Drawing
                UIBezierPath* iconclockPath = UIBezierPath.bezierPath;
                [iconclockPath moveToPoint: CGPointMake(14.7, 14.25)];
                [iconclockPath addCurveToPoint: CGPointMake(14.5, 15) controlPoint1: CGPointMake(14.57, 14.47) controlPoint2: CGPointMake(14.5, 14.73)];
                [iconclockPath addCurveToPoint: CGPointMake(15.99, 16.5) controlPoint1: CGPointMake(14.5, 15.83) controlPoint2: CGPointMake(15.18, 16.5)];
                [iconclockPath addLineToPoint: CGPointMake(22.01, 16.5)];
                [iconclockPath addCurveToPoint: CGPointMake(23.5, 15) controlPoint1: CGPointMake(22.83, 16.5) controlPoint2: CGPointMake(23.5, 15.83)];
                [iconclockPath addCurveToPoint: CGPointMake(22.01, 13.5) controlPoint1: CGPointMake(23.5, 14.17) controlPoint2: CGPointMake(22.82, 13.5)];
                [iconclockPath addLineToPoint: CGPointMake(17.5, 13.5)];
                [iconclockPath addLineToPoint: CGPointMake(17.5, 9)];
                [iconclockPath addCurveToPoint: CGPointMake(16, 7.5) controlPoint1: CGPointMake(17.5, 8.17) controlPoint2: CGPointMake(16.83, 7.5)];
                [iconclockPath addCurveToPoint: CGPointMake(14.5, 9) controlPoint1: CGPointMake(15.17, 7.5) controlPoint2: CGPointMake(14.5, 8.17)];
                [iconclockPath addLineToPoint: CGPointMake(14.5, 13.5)];
                [iconclockPath addCurveToPoint: CGPointMake(14.7, 14.25) controlPoint1: CGPointMake(14.5, 13.77) controlPoint2: CGPointMake(14.57, 14.03)];
                [iconclockPath closePath];
                [iconclockPath moveToPoint: CGPointMake(16, 30)];
                [iconclockPath addCurveToPoint: CGPointMake(31, 15) controlPoint1: CGPointMake(24.28, 30) controlPoint2: CGPointMake(31, 23.28)];
                [iconclockPath addCurveToPoint: CGPointMake(16, 0) controlPoint1: CGPointMake(31, 6.72) controlPoint2: CGPointMake(24.28, 0)];
                [iconclockPath addCurveToPoint: CGPointMake(1, 15) controlPoint1: CGPointMake(7.72, 0) controlPoint2: CGPointMake(1, 6.72)];
                [iconclockPath addCurveToPoint: CGPointMake(16, 30) controlPoint1: CGPointMake(1, 23.28) controlPoint2: CGPointMake(7.72, 30)];
                [iconclockPath closePath];
                [iconclockPath moveToPoint: CGPointMake(16, 27)];
                [iconclockPath addCurveToPoint: CGPointMake(28, 15) controlPoint1: CGPointMake(22.63, 27) controlPoint2: CGPointMake(28, 21.63)];
                [iconclockPath addCurveToPoint: CGPointMake(16, 3) controlPoint1: CGPointMake(28, 8.37) controlPoint2: CGPointMake(22.63, 3)];
                [iconclockPath addCurveToPoint: CGPointMake(4, 15) controlPoint1: CGPointMake(9.37, 3) controlPoint2: CGPointMake(4, 8.37)];
                [iconclockPath addCurveToPoint: CGPointMake(16, 27) controlPoint1: CGPointMake(4, 21.63) controlPoint2: CGPointMake(9.37, 27)];
                [iconclockPath closePath];
                iconclockPath.miterLimit = 4;

                iconclockPath.usesEvenOddFillRule = YES;

                [emeraldGreen setFill];
                [iconclockPath fill];
            }
        }
    }
}

#pragma mark Generated Images

+ (UIImage*)imageOfTimeIcon
{
    if (_imageOfTimeIcon)
        return _imageOfTimeIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(32, 31), NO, 0.0f);
    [StyleKit drawTimeIcon];

    _imageOfTimeIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfTimeIcon;
}

#pragma mark Customization Infrastructure

- (void)setTimeIconTargets: (NSArray*)timeIconTargets
{
    _timeIconTargets = timeIconTargets;

    for (id target in self.timeIconTargets)
        [target setImage: StyleKit.imageOfTimeIcon];
}


@end
